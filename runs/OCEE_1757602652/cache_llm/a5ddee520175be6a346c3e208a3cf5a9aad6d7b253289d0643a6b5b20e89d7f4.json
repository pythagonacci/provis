{
  "_raw": "{\n  \"glossary\": {\n    \"module\": {\n      \"definition\": \"A module is a self-contained piece of code that encapsulates related functions or classes.\",\n      \"vibecoder\": \"Think of a module as a toolbox, where each tool helps you build something specific.\"\n    },\n    \"state\": {\n      \"definition\": \"State refers to the current condition or data of an application at a given time.\",\n      \"vibecoder\": \"Imagine state as the mood of a party; it can change based on the music and people present.\"\n    },\n    \"route\": {\n      \"definition\": \"A route defines a specific path in an application that leads to a particular resource or view.\",\n      \"vibecoder\": \"Consider a route as a map guiding you to different attractions in a city.\"\n    },\n    \"service\": {\n      \"definition\": \"A service is a reusable piece of code that performs a specific task, often involving data handling.\",\n      \"vibecoder\": \"Think of a service as a waiter in a restaurant, fetching what you need from the kitchen.\"\n    },\n    \"controller\": {\n      \"definition\": \"A controller manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Imagine a conductor leading an orchestra, ensuring all musicians play in harmony.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A dependency is a piece of code that another piece relies on to function properly.\",\n      \"vibecoder\": \"Think of a dependency as a crutch that supports you while you walk.\"\n    },\n    \"props\": {\n      \"definition\": \"Props are short for properties; they are inputs passed to components in a framework like React.\",\n      \"vibecoder\": \"Imagine props as ingredients in a recipe, each adding flavor to the final dish.\"\n    },\n    \"test\": {\n      \"definition\": \"A test is a procedure to check if a piece of code behaves as expected.\",\n      \"vibecoder\": \"Think of a test as a dress rehearsal before the big show, ensuring everything runs smoothly.\"\n    },\n    \"context\": {\n      \"definition\": \"Context provides a way to share values between components without passing props explicitly.\",\n      \"vibecoder\": \"Imagine context as the atmosphere of a room, influencing how everyone feels and interacts.\"\n    },\n    \"configuration\": {\n      \"definition\": \"Configuration refers to settings that determine how an application behaves.\",\n      \"vibecoder\": \"Think of configuration as the settings on a coffee machine, adjusting the brew to your taste.\"\n    },\n    \"API\": {\n      \"definition\": \"An API (Application Programming Interface) allows different software applications to communicate with each other.\",\n      \"vibecoder\": \"Imagine an API as a waiter taking your order and delivering it from the kitchen to your table.\"\n    },\n    \"action\": {\n      \"definition\": \"An action is an event that triggers a change in the application's state.\",\n      \"vibecoder\": \"Think of an action as a spark that ignites a fire, setting off a chain reaction.\"\n    },\n    \"selector\": {\n      \"definition\": \"A selector is a function that extracts specific data from the state in an application.\",\n      \"vibecoder\": \"Imagine a selector as a librarian, helping you find the exact book you need from a vast library.\"\n    },\n    \"class\": {\n      \"definition\": \"A class is a blueprint for creating objects, defining properties and methods.\",\n      \"vibecoder\": \"Think of a class as a mold for making cookies, shaping each one with the same design.\"\n    },\n    \"middleware\": {\n      \"definition\": \"Middleware is software that acts as a bridge between different applications or services.\",\n      \"vibecoder\": \"Imagine middleware as a translator, helping two people who speak different"
}