{
  "_raw": "{\n  \"glossary\": {\n    \"provider\": {\n      \"definition\": \"A provider is a component that supplies data or services to other parts of an application.\",\n      \"vibecoder\": \"Think of a provider as a friendly waiter bringing you the ingredients you need to cook your favorite dish.\"\n    },\n    \"state\": {\n      \"definition\": \"State refers to the current condition or data of an application at a specific moment.\",\n      \"vibecoder\": \"Imagine state as the mood of a person; it can change based on experiences and influences.\"\n    },\n    \"component\": {\n      \"definition\": \"A component is a reusable piece of code that encapsulates a part of the user interface.\",\n      \"vibecoder\": \"Picture a component as a building block in a Lego set, each piece contributing to the overall structure.\"\n    },\n    \"service\": {\n      \"definition\": \"A service is a function or module that performs a specific task, often related to data handling or business logic.\",\n      \"vibecoder\": \"Think of a service as a specialized tool in a toolbox, designed to help you accomplish a specific job.\"\n    },\n    \"queue\": {\n      \"definition\": \"A queue is a data structure that stores items in a first-in, first-out (FIFO) order.\",\n      \"vibecoder\": \"Imagine a queue as a line of people waiting for a concert; the first person in line gets in first.\"\n    },\n    \"database model\": {\n      \"definition\": \"A database model defines how data is structured and organized within a database.\",\n      \"vibecoder\": \"Think of a database model as the blueprint of a house, outlining where everything should go.\"\n    },\n    \"test\": {\n      \"definition\": \"A test is a procedure to verify that a piece of code behaves as expected.\",\n      \"vibecoder\": \"Imagine a test as a pop quiz for your code, checking if it knows the right answers.\"\n    },\n    \"environment variable\": {\n      \"definition\": \"An environment variable is a dynamic value that can affect the behavior of running processes in an application.\",\n      \"vibecoder\": \"Think of environment variables as the weather conditions that influence how you dress for the day.\"\n    },\n    \"API\": {\n      \"definition\": \"An API (Application Programming Interface) is a set of rules that allows different software applications to communicate with each other.\",\n      \"vibecoder\": \"Imagine an API as a restaurant menu, listing the dishes you can order and how to request them.\"\n    },\n    \"context\": {\n      \"definition\": \"Context provides information about the environment in which a component or function operates.\",\n      \"vibecoder\": \"Think of context as the setting of a story, giving background that shapes the plot.\"\n    },\n    \"action\": {\n      \"definition\": \"An action is an event or command that triggers a change in the state of an application.\",\n      \"vibecoder\": \"Imagine an action as a spark that ignites a fire, setting off a chain reaction.\"\n    },\n    \"class\": {\n      \"definition\": \"A class is a blueprint for creating objects in object-oriented programming, defining properties and methods.\",\n      \"vibecoder\": \"Think of a class as a recipe, detailing the ingredients and steps needed to create a dish.\"\n    },\n    \"logger\": {\n      \"definition\": \"A logger is a tool that records events or messages during the execution of an application.\",\n      \"vibecoder\": \"Imagine a logger as a diary, keeping track of daily events and experiences.\"\n    },\n    \"export\": {\n      \"definition\": \"Export is the process of making a module or component available for use in other parts of an application.\",\n      \"vibecoder\": \"Think of export as sending a postcard to a friend, sharing a piece of"
}