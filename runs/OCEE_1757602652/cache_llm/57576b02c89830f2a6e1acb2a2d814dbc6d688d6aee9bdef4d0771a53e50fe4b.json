{
  "_raw": "{\n  \"glossary\": {\n    \"job\": {\n      \"definition\": \"A task or unit of work that a program executes.\",\n      \"vibecoder\": \"Think of a job as a chore on your to-do list, waiting for you to tackle it.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of code or library that another piece of code relies on to function.\",\n      \"vibecoder\": \"Imagine a plant that needs sunlight; the sunlight is its dependency for growth.\"\n    },\n    \"queue\": {\n      \"definition\": \"A data structure that holds tasks in a specific order, usually first-in-first-out.\",\n      \"vibecoder\": \"Picture a line of people waiting for ice cream; the first in line gets served first.\"\n    },\n    \"component\": {\n      \"definition\": \"A reusable piece of code that encapsulates a part of a user interface.\",\n      \"vibecoder\": \"Think of a component as a LEGO block, each one fitting together to build something bigger.\"\n    },\n    \"provider\": {\n      \"definition\": \"A service or component that supplies data or functionality to other parts of an application.\",\n      \"vibecoder\": \"Imagine a waiter bringing food to your table; the provider serves what you need.\"\n    },\n    \"state\": {\n      \"definition\": \"The current condition or data of an application at a specific time.\",\n      \"vibecoder\": \"Think of state as the mood of a person; it can change based on experiences.\"\n    },\n    \"route\": {\n      \"definition\": \"A path that defines how an application responds to a specific request or URL.\",\n      \"vibecoder\": \"Picture a map with roads leading to different destinations; each route takes you somewhere unique.\"\n    },\n    \"controller\": {\n      \"definition\": \"A component that manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Think of a conductor leading an orchestra, ensuring all parts play in harmony.\"\n    },\n    \"function\": {\n      \"definition\": \"A block of reusable code that performs a specific task when called.\",\n      \"vibecoder\": \"Imagine a magic spell; when you say the right words, it performs a specific action.\"\n    },\n    \"reducer\": {\n      \"definition\": \"A function that takes the current state and an action to return a new state.\",\n      \"vibecoder\": \"Think of a chef who takes ingredients (state) and a recipe (action) to create a dish (new state).\"\n    },\n    \"selector\": {\n      \"definition\": \"A function that extracts specific data from the state.\",\n      \"vibecoder\": \"Imagine a treasure hunter sifting through sand to find valuable gems; that's what a selector does.\"\n    },\n    \"context\": {\n      \"definition\": \"A way to share data across components without passing props manually at every level.\",\n      \"vibecoder\": \"Think of context as a shared secret among friends, known without needing to repeat it.\"\n    },\n    \"props\": {\n      \"definition\": \"Short for properties, these are inputs passed to components to customize their behavior.\",\n      \"vibecoder\": \"Imagine props as gifts you give to a friend to help them shine in a performance.\"\n    },\n    \"middleware\": {\n      \"definition\": \"A layer of code that sits between the request and response, often used for logging or modifying requests.\",\n      \"vibecoder\": \"Think of middleware as a filter in a coffee maker, ensuring only the best brew gets through.\"\n    },\n    \"database model\": {\n      \"definition\": \"A structure that defines how data is organized and accessed in a database.\",\n      \"vibecoder\": \"Imagine a library cataloging system that organizes books for easy finding.\"\n    },\n    \""
}