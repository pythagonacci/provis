{
  "_raw": "{\n  \"glossary\": {\n    \"hook\": {\n      \"definition\": \"A hook is a special function that allows you to tap into the lifecycle of a component or application to add custom behavior.\",\n      \"vibecoder\": \"Think of a hook as a fishing line that lets you catch the right moments in your code's journey.\"\n    },\n    \"state\": {\n      \"definition\": \"State refers to the current data or condition of an application or component, which can change over time.\",\n      \"vibecoder\": \"Imagine state as the mood of a character in a story, shifting with each plot twist.\"\n    },\n    \"schema\": {\n      \"definition\": \"A schema is a blueprint that defines the structure and organization of data in a database.\",\n      \"vibecoder\": \"Picture a schema as the architectural plan for a house, outlining where each room and feature goes.\"\n    },\n    \"provider\": {\n      \"definition\": \"A provider is a component or service that supplies data or functionality to other parts of an application.\",\n      \"vibecoder\": \"Think of a provider as a generous chef, serving up delicious ingredients to hungry cooks in the kitchen.\"\n    },\n    \"export\": {\n      \"definition\": \"Export is the process of making a piece of code available for use in other files or modules.\",\n      \"vibecoder\": \"Imagine export as sending a postcard from your vacation, sharing your experiences with friends back home.\"\n    },\n    \"class\": {\n      \"definition\": \"A class is a blueprint for creating objects, encapsulating data and behavior in object-oriented programming.\",\n      \"vibecoder\": \"Think of a class as a cookie cutter, shaping dough into specific forms with unique features.\"\n    },\n    \"controller\": {\n      \"definition\": \"A controller manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Picture a conductor leading an orchestra, ensuring all musicians play in harmony.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A dependency is a piece of code or library that another piece of code relies on to function properly.\",\n      \"vibecoder\": \"Think of a dependency as a crutch that supports a person while they learn to walk on their own.\"\n    },\n    \"environment variable\": {\n      \"definition\": \"An environment variable is a dynamic value that can affect the behavior of running processes in an application.\",\n      \"vibecoder\": \"Imagine environment variables as the weather conditions that influence how you dress for the day.\"\n    },\n    \"logger\": {\n      \"definition\": \"A logger is a tool that records events or messages during the execution of an application for debugging or monitoring.\",\n      \"vibecoder\": \"Think of a logger as a diary, capturing the important moments of your code's life.\"\n    },\n    \"module\": {\n      \"definition\": \"A module is a self-contained piece of code that can be reused across different parts of an application.\",\n      \"vibecoder\": \"Picture a module as a LEGO brick, easily connected to build something bigger.\"\n    },\n    \"function\": {\n      \"definition\": \"A function is a reusable block of code that performs a specific task when called.\",\n      \"vibecoder\": \"Think of a function as a magic spell that transforms ingredients into a delicious dish.\"\n    },\n    \"queue\": {\n      \"definition\": \"A queue is a data structure that stores items in a first-in, first-out (FIFO) order.\",\n      \"vibecoder\": \"Imagine a queue as a line of people waiting for their turn at a concert, each one getting in as the previous one exits.\"\n    },\n    \"job\": {\n      \"definition\": \"A job is a specific task or unit of work that is processed by a system or application.\",\n      \"vibecoder\": \"Think of"
}