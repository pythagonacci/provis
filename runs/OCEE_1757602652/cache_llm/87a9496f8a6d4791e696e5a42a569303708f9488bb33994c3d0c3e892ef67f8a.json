{
  "_raw": "{\n  \"glossary\": {\n    \"action\": {\n      \"definition\": \"An action is a plain object that describes a change or event in the application.\",\n      \"vibecoder\": \"Think of an action as a letter sent to a friend, telling them about something exciting that happened.\"\n    },\n    \"import\": {\n      \"definition\": \"Import is a way to bring in code or resources from another file or module.\",\n      \"vibecoder\": \"Imagine importing as inviting a talented musician to join your band for a jam session.\"\n    },\n    \"configuration\": {\n      \"definition\": \"Configuration refers to the settings and options that define how an application behaves.\",\n      \"vibecoder\": \"It's like setting the stage for a play, deciding on the lights, props, and backdrop before the show starts.\"\n    },\n    \"controller\": {\n      \"definition\": \"A controller manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Think of a controller as a traffic cop, directing the flow of information to keep everything running smoothly.\"\n    },\n    \"reducer\": {\n      \"definition\": \"A reducer is a function that takes the current state and an action to return a new state.\",\n      \"vibecoder\": \"Imagine a reducer as a chef, taking ingredients (state) and a recipe (action) to create a delicious dish (new state).\"\n    },\n    \"queue\": {\n      \"definition\": \"A queue is a data structure that stores items in a first-in, first-out (FIFO) order.\",\n      \"vibecoder\": \"Picture a queue as a line of people waiting for a concert, where the first person in line gets in first.\"\n    },\n    \"test\": {\n      \"definition\": \"A test is a procedure to verify that a piece of code behaves as expected.\",\n      \"vibecoder\": \"Think of a test as a dress rehearsal, ensuring everything is perfect before the big performance.\"\n    },\n    \"route\": {\n      \"definition\": \"A route defines a path in an application that maps a URL to a specific component or action.\",\n      \"vibecoder\": \"Imagine a route as a map guiding you to different destinations in a city, each leading to a unique experience.\"\n    },\n    \"export\": {\n      \"definition\": \"Export is a way to make code or resources available for use in other files or modules.\",\n      \"vibecoder\": \"Think of exporting as sending a postcard from your vacation to share your experiences with friends.\"\n    },\n    \"database model\": {\n      \"definition\": \"A database model defines the structure and organization of data within a database.\",\n      \"vibecoder\": \"Picture a database model as the blueprint of a house, outlining where each room and feature will go.\"\n    },\n    \"job\": {\n      \"definition\": \"A job is a task or unit of work that needs to be completed, often in a background process.\",\n      \"vibecoder\": \"Think of a job as a chore on a to-do list, waiting to be tackled at the right moment.\"\n    },\n    \"module\": {\n      \"definition\": \"A module is a self-contained piece of code that can be reused across different parts of an application.\",\n      \"vibecoder\": \"Imagine a module as a LEGO block, which can be used in various constructions to build something great.\"\n    },\n    \"schema\": {\n      \"definition\": \"A schema defines the structure of data, including the types and relationships between different data elements.\",\n      \"vibecoder\": \"Think of a schema as the recipe for a dish, detailing the ingredients and how they fit together.\"\n    },\n    \"provider\": {\n      \"definition\": \"A provider is a component that supplies data or services to other parts of an application.\",\n      \"vibec"
}