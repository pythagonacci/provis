{
  "_raw": "{\n  \"glossary\": {\n    \"class\": {\n      \"definition\": \"A blueprint for creating objects in programming, defining properties and methods.\",\n      \"vibecoder\": \"Think of a class as a cookie cutter, shaping dough into specific cookie forms.\"\n    },\n    \"component\": {\n      \"definition\": \"A reusable piece of code that encapsulates functionality and UI in applications.\",\n      \"vibecoder\": \"Imagine a Lego block; each component is a block that can connect to build something bigger.\"\n    },\n    \"module\": {\n      \"definition\": \"A self-contained unit of code that can be imported and used in other parts of an application.\",\n      \"vibecoder\": \"Picture a toolbox; each module is a tool that helps you build your project.\"\n    },\n    \"test\": {\n      \"definition\": \"A procedure to verify that code behaves as expected and meets requirements.\",\n      \"vibecoder\": \"Think of a test as a safety check before a roller coaster ride, ensuring everything is secure.\"\n    },\n    \"hook\": {\n      \"definition\": \"A special function that allows you to tap into the lifecycle of a component or application.\",\n      \"vibecoder\": \"Imagine a fishing hook; it catches events and lets you reel in useful data.\"\n    },\n    \"API\": {\n      \"definition\": \"A set of rules that allows different software applications to communicate with each other.\",\n      \"vibecoder\": \"Think of an API as a restaurant menu, listing what you can order from the kitchen of another application.\"\n    },\n    \"reducer\": {\n      \"definition\": \"A function that takes the current state and an action to produce a new state in state management.\",\n      \"vibecoder\": \"Picture a blender; a reducer mixes ingredients (state and action) to create a new smoothie (new state).\"\n    },\n    \"route\": {\n      \"definition\": \"A path that defines how an application responds to a specific URL or request.\",\n      \"vibecoder\": \"Think of a route as a road map, guiding users to their desired destination in an app.\"\n    },\n    \"provider\": {\n      \"definition\": \"A component that supplies data or services to other components in an application.\",\n      \"vibecoder\": \"Imagine a water fountain; a provider delivers refreshing data to thirsty components.\"\n    },\n    \"state\": {\n      \"definition\": \"The current condition or data of an application at a given time.\",\n      \"vibecoder\": \"Think of state as the mood of a party; it changes based on the people and activities happening.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of software that another piece of software relies on to function.\",\n      \"vibecoder\": \"Imagine a chain; each link (dependency) holds up the next, creating a strong connection.\"\n    },\n    \"environment variable\": {\n      \"definition\": \"A dynamic value that can affect the behavior of running applications, often used for configuration.\",\n      \"vibecoder\": \"Think of environment variables as the weather; they change conditions for your code to operate.\"\n    },\n    \"export\": {\n      \"definition\": \"To make a piece of code available for use in other files or modules.\",\n      \"vibecoder\": \"Imagine sending a postcard; exporting shares your message (code) with others.\"\n    },\n    \"service\": {\n      \"definition\": \"A function or module that performs a specific task, often related to data handling or business logic.\",\n      \"vibecoder\": \"Think of a service as a waiter at a restaurant, delivering what you ordered (data) to your table.\"\n    },\n    \"job\": {\n      \"definition\": \"A scheduled task or operation that runs in the background, often for processing data.\",\n      \"vibecoder\": \"Imagine a factory worker"
}