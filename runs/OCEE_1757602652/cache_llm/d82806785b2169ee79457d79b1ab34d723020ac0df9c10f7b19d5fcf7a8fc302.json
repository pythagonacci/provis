{
  "steps": [
    {
      "label": "Start the Application",
      "detail": "Run the main application file to initialize the server.",
      "scenario": "The server starts successfully and listens for incoming requests."
    },
    {
      "label": "Send Health Check Request",
      "detail": "Send a GET request to the /healthz endpoint.",
      "scenario": "The request is sent to the server without issues."
    },
    {
      "label": "Receive Response",
      "detail": "Wait for the server to respond to the health check request.",
      "scenario": "The server responds with a 200 OK status and health information."
    },
    {
      "label": "Check Response Content",
      "detail": "Inspect the response body for health status details.",
      "scenario": "The response contains the expected health status information."
    },
    {
      "label": "Log Health Status",
      "detail": "Log the health status received from the server.",
      "scenario": "The health status is logged successfully for monitoring."
    },
    {
      "label": "Monitor Application",
      "detail": "Continue to monitor the application health at regular intervals.",
      "scenario": "Health checks are performed periodically without errors."
    }
  ],
  "edge_cases": [
    {
      "label": "Server Not Running",
      "detail": "Attempt to send a health check request when the server is not running.",
      "scenario": "Receive a connection error indicating that the server is unreachable."
    },
    {
      "label": "Invalid Response Format",
      "detail": "Receive a response from the server that does not match the expected format.",
      "scenario": "Log an error indicating that the health status could not be parsed."
    },
    {
      "label": "Timeout Error",
      "detail": "The health check request times out due to server unresponsiveness.",
      "scenario": "Receive a timeout error after waiting for a response."
    }
  ]
}