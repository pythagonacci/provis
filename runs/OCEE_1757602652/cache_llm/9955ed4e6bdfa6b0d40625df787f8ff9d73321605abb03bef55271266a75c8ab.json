{
  "inputs": [
    {
      "path": "backend/app/routers/deck.py",
      "why": "Handles incoming requests related to deck operations."
    },
    {
      "path": "backend/app/routers/prospect.py",
      "why": "Handles incoming requests related to prospect operations."
    },
    {
      "path": "backend/app/routers/email.py",
      "why": "Handles incoming requests related to email operations."
    }
  ],
  "stores": [
    {
      "path": "backend/app/database.py",
      "why": "Defines the database connection and ORM setup for data storage."
    },
    {
      "path": "backend/app/models/prospect.py",
      "why": "Defines the data model for prospects, representing stored data structure."
    },
    {
      "path": "backend/app/models/deck.py",
      "why": "Defines the data model for decks, representing stored data structure."
    },
    {
      "path": "backend/app/models/email.py",
      "why": "Defines the data model for emails, representing stored data structure."
    }
  ],
  "externals": [
    {
      "path": "fastapi",
      "why": "Framework used for building the web application."
    },
    {
      "path": "sqlalchemy.orm",
      "why": "ORM library used for database interactions."
    },
    {
      "path": "pydantic",
      "why": "Library used for data validation and settings management."
    },
    {
      "path": "services.ai",
      "why": "External service for AI-related functionalities."
    },
    {
      "path": "services.pdf",
      "why": "External service for PDF generation functionalities."
    },
    {
      "path": "services.slides",
      "why": "External service for slide generation functionalities."
    }
  ],
  "contracts": [
    {
      "path": "backend/app/schemas/deck.py",
      "why": "Defines the schema for deck data, ensuring data integrity."
    },
    {
      "path": "backend/app/schemas/prospect.py",
      "why": "Defines the schema for prospect data, ensuring data integrity."
    },
    {
      "path": "backend/app/schemas/email.py",
      "why": "Defines the schema for email data, ensuring data integrity."
    }
  ],
  "policies": [
    {
      "path": "backend/app/config.py",
      "why": "Contains configuration settings that may include policy definitions."
    }
  ]
}