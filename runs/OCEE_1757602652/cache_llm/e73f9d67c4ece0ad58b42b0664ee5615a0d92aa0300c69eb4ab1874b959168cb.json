{
  "_raw": "{\n  \"glossary\": {\n    \"job\": {\n      \"definition\": \"A task or unit of work that a program executes.\",\n      \"vibecoder\": \"Think of a job as a chore you assign to a robot; it gets it done while you relax.\"\n    },\n    \"configuration\": {\n      \"definition\": \"Settings that determine how a program or system operates.\",\n      \"vibecoder\": \"Imagine tuning a musical instrument; configuration helps your software hit the right notes.\"\n    },\n    \"route\": {\n      \"definition\": \"A path that defines how to access a specific resource in a web application.\",\n      \"vibecoder\": \"Routes are like road signs guiding you to your destination in the vast city of the web.\"\n    },\n    \"props\": {\n      \"definition\": \"Short for properties, these are inputs passed to components in a framework like React.\",\n      \"vibecoder\": \"Props are like ingredients in a recipe, giving your dish (component) its unique flavor.\"\n    },\n    \"environment variable\": {\n      \"definition\": \"A dynamic value that can affect the behavior of running processes on a computer.\",\n      \"vibecoder\": \"Think of environment variables as the weather forecast for your program; they set the mood for how it behaves.\"\n    },\n    \"controller\": {\n      \"definition\": \"A component that manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Controllers are like traffic cops, directing data where it needs to go without causing a jam.\"\n    },\n    \"queue\": {\n      \"definition\": \"A data structure that holds tasks waiting to be processed in a specific order.\",\n      \"vibecoder\": \"Imagine a line at a coffee shop; a queue organizes who gets served next.\"\n    },\n    \"reducer\": {\n      \"definition\": \"A function that takes the current state and an action to return a new state in state management.\",\n      \"vibecoder\": \"Reducers are like chefs who take raw ingredients (state and action) and whip up a delicious dish (new state).\"\n    },\n    \"hook\": {\n      \"definition\": \"A special function that lets you 'hook into' React features like state and lifecycle methods.\",\n      \"vibecoder\": \"Hooks are like secret doors in a house, giving you access to hidden rooms (features) in your React home.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of software that another piece of software relies on to function.\",\n      \"vibecoder\": \"Dependencies are like a chain of friends; one can't go on without the others.\"\n    },\n    \"logger\": {\n      \"definition\": \"A tool or library that records events or messages for debugging and monitoring.\",\n      \"vibecoder\": \"Loggers are like diary keepers, noting down everything that happens in your program's life.\"\n    },\n    \"function\": {\n      \"definition\": \"A reusable block of code that performs a specific task when called.\",\n      \"vibecoder\": \"Functions are like magic spells; you say the right words, and they conjure up results.\"\n    },\n    \"class\": {\n      \"definition\": \"A blueprint for creating objects that encapsulate data and behavior in object-oriented programming.\",\n      \"vibecoder\": \"Classes are like blueprints for a house; they define how the house (object) will be built.\"\n    },\n    \"action\": {\n      \"definition\": \"An object that describes a change or event in an application, often used in state management.\",\n      \"vibecoder\": \"Actions are like the plot twists in a story, driving the narrative (state) forward.\"\n    },\n    \"provider\": {\n      \"definition\": \"A component that supplies data or functionality to other components in a React application.\",\n      \"vibecoder"
}