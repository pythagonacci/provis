{
  "reads": [
    {
      "actorPath": "backend/app/routers/prospect.py",
      "action": "read",
      "via": "database",
      "reason": "The router accesses the database to retrieve prospect data."
    },
    {
      "actorPath": "backend/app/routers/deck.py",
      "action": "read",
      "via": "database",
      "reason": "The router accesses the database to retrieve deck data."
    },
    {
      "actorPath": "backend/app/routers/email.py",
      "action": "read",
      "via": "database",
      "reason": "The router accesses the database to retrieve email data."
    },
    {
      "actorPath": "backend/app/models/prospect.py",
      "action": "read",
      "via": "database",
      "reason": "The model accesses the database for prospect-related operations."
    },
    {
      "actorPath": "backend/app/models/deck.py",
      "action": "read",
      "via": "database",
      "reason": "The model accesses the database for deck-related operations."
    },
    {
      "actorPath": "backend/app/models/email.py",
      "action": "read",
      "via": "database",
      "reason": "The model accesses the database for email-related operations."
    },
    {
      "actorPath": "backend/app/schemas/prospect.py",
      "action": "read",
      "via": "pydantic",
      "reason": "The schema validates data related to prospects."
    },
    {
      "actorPath": "backend/app/schemas/deck.py",
      "action": "read",
      "via": "pydantic",
      "reason": "The schema validates data related to decks."
    },
    {
      "actorPath": "backend/app/schemas/email.py",
      "action": "read",
      "via": "pydantic",
      "reason": "The schema validates data related to emails."
    }
  ],
  "writes": [
    {
      "actorPath": "backend/app/database.py",
      "action": "write",
      "via": "sqlalchemy.orm",
      "reason": "The database file contains operations to write data to the database."
    }
  ]
}