{
  "_raw": "{\n  \"glossary\": {\n    \"reducer\": {\n      \"definition\": \"A function that takes the current state and an action, and returns a new state.\",\n      \"vibecoder\": \"Think of a reducer as a chef who takes ingredients (state) and a recipe (action) to create a delicious dish (new state).\"\n    },\n    \"context\": {\n      \"definition\": \"A way to share values between components without passing props manually at every level.\",\n      \"vibecoder\": \"Imagine context as a family tree that holds shared secrets, allowing members to access important information without asking everyone individually.\"\n    },\n    \"export\": {\n      \"definition\": \"A way to make functions, objects, or variables available for use in other files.\",\n      \"vibecoder\": \"Think of export as sending a postcard from your vacation, letting others know what youâ€™ve created and inviting them to enjoy it too.\"\n    },\n    \"controller\": {\n      \"definition\": \"A component that manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Picture a conductor leading an orchestra, ensuring that each musician (data) plays in harmony with the audience (view).\"\n    },\n    \"function\": {\n      \"definition\": \"A reusable block of code that performs a specific task when called.\",\n      \"vibecoder\": \"Imagine a function as a magic box: you put in some ingredients (inputs), and it gives you back a finished product (output).\"\n    },\n    \"action\": {\n      \"definition\": \"An object that represents an event or a change that should happen in the application state.\",\n      \"vibecoder\": \"Think of an action as a letter sent to a post office, requesting a specific change in the community (state).\"\n    },\n    \"logger\": {\n      \"definition\": \"A tool that records events or messages for debugging and monitoring purposes.\",\n      \"vibecoder\": \"Imagine a logger as a diary that keeps track of your daily adventures, helping you remember what happened and when.\"\n    },\n    \"database model\": {\n      \"definition\": \"A structure that defines how data is organized and how relationships between data are managed.\",\n      \"vibecoder\": \"Think of a database model as a blueprint for a city, outlining where each building (data) should go and how they connect.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of software or library that another piece of software relies on to function.\",\n      \"vibecoder\": \"Imagine a dependency as a crutch that supports you while you walk; without it, you might struggle to move forward.\"\n    },\n    \"job\": {\n      \"definition\": \"A task or unit of work that is scheduled to be executed, often in the background.\",\n      \"vibecoder\": \"Think of a job as a delivery person, carrying a package (task) to its destination (completion) at the right time.\"\n    },\n    \"import\": {\n      \"definition\": \"A way to bring in functions, objects, or variables from other files for use in the current file.\",\n      \"vibecoder\": \"Imagine import as opening a door to a neighboring room, allowing you to borrow tools (code) you need for your project.\"\n    },\n    \"selector\": {\n      \"definition\": \"A function that extracts specific pieces of data from the state.\",\n      \"vibecoder\": \"Think of a selector as a librarian who knows exactly where to find the right book (data) in a vast library (state).\"\n    },\n    \"schema\": {\n      \"definition\": \"A blueprint that defines the structure of a database, including tables and relationships.\",\n      \"vibecoder\": \"Imagine a schema as the architectural plan for a building, detailing how each room (data) fits together.\"\n"
}