{
  "_raw": "{\n  \"glossary\": {\n    \"logger\": {\n      \"definition\": \"A tool that records events or messages in a program to help track its behavior.\",\n      \"vibecoder\": \"Think of a logger as a diary for your code, capturing its thoughts and actions.\"\n    },\n    \"export\": {\n      \"definition\": \"The process of making a piece of code available for use in other parts of a program.\",\n      \"vibecoder\": \"Imagine sending a postcard from one island to another, sharing news from your little corner of the world.\"\n    },\n    \"job\": {\n      \"definition\": \"A specific task or operation that a program needs to perform.\",\n      \"vibecoder\": \"A job is like a chore on a to-do list, waiting for someone to tackle it.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of code or library that another piece of code relies on to function properly.\",\n      \"vibecoder\": \"Dependencies are like ingredients in a recipe; you need them to create the final dish.\"\n    },\n    \"API\": {\n      \"definition\": \"A set of rules that allows different software programs to communicate with each other.\",\n      \"vibecoder\": \"An API is like a waiter at a restaurant, taking your order and bringing back what you requested.\"\n    },\n    \"import\": {\n      \"definition\": \"The process of bringing in code from another file or module to use in your program.\",\n      \"vibecoder\": \"Importing is like borrowing a book from the library to read and learn from.\"\n    },\n    \"provider\": {\n      \"definition\": \"A service or component that supplies data or functionality to other parts of an application.\",\n      \"vibecoder\": \"A provider is like a fountain, offering a steady stream of water (data) to thirsty plants (components).\"\n    },\n    \"middleware\": {\n      \"definition\": \"Software that acts as a bridge between different applications or services, often processing data as it passes through.\",\n      \"vibecoder\": \"Middleware is like a traffic cop, directing data where it needs to go while ensuring smooth flow.\"\n    },\n    \"component\": {\n      \"definition\": \"A reusable piece of code that encapsulates a specific functionality or UI element.\",\n      \"vibecoder\": \"Think of a component as a LEGO brick, each one fitting together to build a larger structure.\"\n    },\n    \"environment variable\": {\n      \"definition\": \"A dynamic value that can affect the behavior of a program, often set outside the code.\",\n      \"vibecoder\": \"Environment variables are like the weather; they can change how you dress (run your program) each day.\"\n    },\n    \"class\": {\n      \"definition\": \"A blueprint for creating objects in object-oriented programming, defining properties and methods.\",\n      \"vibecoder\": \"A class is like a mold for making cookies; it shapes the dough (objects) into a specific form.\"\n    },\n    \"hook\": {\n      \"definition\": \"A function that allows you to tap into and extend the functionality of a framework or library.\",\n      \"vibecoder\": \"Hooks are like fishing lines, letting you catch and interact with the flow of your program.\"\n    },\n    \"function\": {\n      \"definition\": \"A block of code designed to perform a specific task when called.\",\n      \"vibecoder\": \"A function is like a magic spell; you say the right words (call it), and it performs its magic.\"\n    },\n    \"state\": {\n      \"definition\": \"The current condition or data of an application at a specific moment in time.\",\n      \"vibecoder\": \"State is like a snapshot of your room; it captures everything as it is right now.\"\n    },\n    \"context\": {\n      \"definition\": \"An object that holds"
}