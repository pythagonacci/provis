{
  "_raw": "{\n  \"glossary\": {\n    \"queue\": {\n      \"definition\": \"A collection of items waiting to be processed in a specific order, usually first-in, first-out (FIFO).\",\n      \"vibecoder\": \"Imagine a line of people waiting to get into a concert; the first person in line gets in first.\"\n    },\n    \"job\": {\n      \"definition\": \"A task or unit of work that needs to be completed, often processed by a system or application.\",\n      \"vibecoder\": \"Think of a job as a chore on your to-do list, waiting for you to tackle it.\"\n    },\n    \"service\": {\n      \"definition\": \"A function or set of functions that provide specific capabilities to other parts of an application.\",\n      \"vibecoder\": \"Like a waiter at a restaurant, a service takes your order and brings you what you need.\"\n    },\n    \"context\": {\n      \"definition\": \"The environment or situation in which a piece of code operates, often holding relevant data.\",\n      \"vibecoder\": \"Picture a stage where actors perform; the context is the setting that influences their actions.\"\n    },\n    \"provider\": {\n      \"definition\": \"A component that supplies data or services to other parts of an application.\",\n      \"vibecoder\": \"Think of a provider as a grocery store, offering ingredients to chefs (components) for their recipes.\"\n    },\n    \"controller\": {\n      \"definition\": \"A component that manages the flow of data between the model and the view in an application.\",\n      \"vibecoder\": \"Imagine a conductor leading an orchestra, ensuring all musicians play in harmony.\"\n    },\n    \"reducer\": {\n      \"definition\": \"A function that takes the current state and an action, returning a new state based on that action.\",\n      \"vibecoder\": \"Like a chef adjusting a recipe based on feedback, a reducer modifies the dish (state) to improve it.\"\n    },\n    \"route\": {\n      \"definition\": \"A defined path in an application that determines how to respond to a specific request.\",\n      \"vibecoder\": \"Think of a route as a map guiding travelers to their destination.\"\n    },\n    \"state\": {\n      \"definition\": \"The current condition or data of an application at a specific point in time.\",\n      \"vibecoder\": \"Imagine a snapshot of a busy street; the state captures everything happening at that moment.\"\n    },\n    \"schema\": {\n      \"definition\": \"A blueprint that defines the structure and organization of data in a database.\",\n      \"vibecoder\": \"Like a city planner's layout, a schema outlines where everything should go.\"\n    },\n    \"component\": {\n      \"definition\": \"A reusable piece of code that encapsulates a part of the user interface or functionality.\",\n      \"vibecoder\": \"Think of a LEGO block; each component can connect to others to build something bigger.\"\n    },\n    \"export\": {\n      \"definition\": \"The process of making a piece of code available for use in other parts of an application.\",\n      \"vibecoder\": \"Like sending a postcard to a friend, exporting shares your message (code) with others.\"\n    },\n    \"dependency\": {\n      \"definition\": \"A piece of code or library that another piece of code relies on to function properly.\",\n      \"vibecoder\": \"Imagine a chain where each link depends on the one before it; if one breaks, the whole chain is affected.\"\n    },\n    \"logger\": {\n      \"definition\": \"A tool or component that records events or messages for debugging and monitoring purposes.\",\n      \"vibecoder\": \"Think of a diary that keeps track of your daily adventures; a logger notes down what happens in your code.\"\n    },\n    \"action\": {\n      \"definition\": \"An event"
}