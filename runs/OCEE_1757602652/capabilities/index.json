{
  "index": [
    {
      "id": "cap_healthz",
      "name": "healthz",
      "purpose": "Initialize Application",
      "entryPoints": [
        "backend/app/main.py"
      ],
      "keyFiles": [
        "__future__",
        "backend/app/main.py",
        "config",
        "database",
        "fastapi",
        "os"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/main.py"
      ],
      "sinks": [
        "backend/app/config.py"
      ],
      "anchors": [
        {
          "path": "backend/app/main.py",
          "kind": "api",
          "route": "/healthz"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 13,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_root",
      "name": "/",
      "purpose": "Initialize Application",
      "entryPoints": [
        "backend/app/routers/prospect.py",
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py",
        "offdeal-frontend/src/app/page.tsx"
      ],
      "keyFiles": [
        "__future__",
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py",
        "config",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/prospect.py",
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py",
        "offdeal-frontend/src/app/page.tsx"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py",
        "backend/app/schemas/email.py",
        "backend/app/schemas/prospect.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/prospect.py",
          "kind": "api",
          "route": "/"
        },
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/"
        },
        {
          "path": "backend/app/routers/email.py",
          "kind": "api",
          "route": "/"
        },
        {
          "path": "offdeal-frontend/src/app/page.tsx",
          "kind": "ui",
          "route": "/"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 16,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_{prospect_id}_generate",
      "name": "{prospect_id}/generate",
      "purpose": "Receive Request",
      "entryPoints": [
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py"
      ],
      "keyFiles": [
        "__future__",
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py",
        "config",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py",
        "backend/app/schemas/email.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/{prospect_id}/generate"
        },
        {
          "path": "backend/app/routers/email.py",
          "kind": "api",
          "route": "/{prospect_id}/generate"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 15,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_{deck_id}_render",
      "name": "{deck_id}/render",
      "purpose": "Receive Request",
      "entryPoints": [
        "backend/app/routers/deck.py"
      ],
      "keyFiles": [
        "backend/app/routers/deck.py",
        "config",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/deck.py"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/{deck_id}/render"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 14,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_{deck_id}_slides_{index}",
      "name": "{deck_id}/slides/{index}",
      "purpose": "Initialize Deck",
      "entryPoints": [
        "backend/app/routers/deck.py"
      ],
      "keyFiles": [
        "backend/app/routers/deck.py",
        "config",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/deck.py"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/{deck_id}/slides/{index}"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 14,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_{deck_id}_slides_{index}_ai-edit",
      "name": "{deck_id}/slides/{index}/ai-edit",
      "purpose": "Receive Request",
      "entryPoints": [
        "backend/app/routers/deck.py"
      ],
      "keyFiles": [
        "backend/app/routers/deck.py",
        "config",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/deck.py"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/{deck_id}/slides/{index}/ai-edit"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 14,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_debug_ai-edit-test",
      "name": "debug/ai-edit-test",
      "purpose": "Initialize Application",
      "entryPoints": [
        "backend/app/routers/deck.py"
      ],
      "keyFiles": [
        "backend/app/routers/deck.py",
        "config",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/deck.py"
      ],
      "sinks": [
        "backend/app/config.py",
        "backend/app/schemas/deck.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/deck.py",
          "kind": "api",
          "route": "/debug/ai-edit-test"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 14,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_item_{email_id}",
      "name": "item/{email_id}",
      "purpose": "Receive Email Request",
      "entryPoints": [
        "backend/app/routers/email.py"
      ],
      "keyFiles": [
        "__future__",
        "backend/app/routers/email.py",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/email.py"
      ],
      "sinks": [
        "backend/app/database.py",
        "backend/app/schemas/email.py",
        "backend/app/services/emailgeneration.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/email.py",
          "kind": "api",
          "route": "/item/{email_id}"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 10,
        "workers": 0,
        "other": 0
      }
    },
    {
      "id": "cap_item_{email_id}_ai-edit",
      "name": "item/{email_id}/ai-edit",
      "purpose": "Receive Email Request",
      "entryPoints": [
        "backend/app/routers/email.py"
      ],
      "keyFiles": [
        "__future__",
        "backend/app/routers/email.py",
        "database",
        "pydantic",
        "sqlalchemy.orm",
        "typing"
      ],
      "dataIn": [
        "ALLOWED_ORIGINS",
        "APP_BASE_URL",
        "BULLET_MAX_CHARS",
        "DB_URL",
        "DeckOut",
        "DeckUpdate",
        "EmailAIEditRequest",
        "EmailBatchOut",
        "EmailIn",
        "EmailOut",
        "EmailUpdate",
        "FILE_STORAGE_DIR",
        "MAX_BULLETS",
        "OPENAI_API_KEY",
        "ProspectContext",
        "ProspectCreate",
        "ProspectUpdate",
        "STUB_MODE",
        "Session",
        "Slide",
        "SlideAIEditRequest",
        "SlideIn",
        "TITLE_MAX_CHARS"
      ],
      "dataOut": [
        "DeckOut",
        "EmailBatchOut",
        "EmailOut",
        "ProspectOut"
      ],
      "sources": [
        "backend/app/routers/email.py"
      ],
      "sinks": [
        "backend/app/database.py",
        "backend/app/schemas/email.py",
        "backend/app/services/emailgeneration.py"
      ],
      "anchors": [
        {
          "path": "backend/app/routers/email.py",
          "kind": "api",
          "route": "/item/{email_id}/ai-edit"
        }
      ],
      "lanes": {
        "web": 0,
        "api": 10,
        "workers": 0,
        "other": 0
      }
    }
  ]
}