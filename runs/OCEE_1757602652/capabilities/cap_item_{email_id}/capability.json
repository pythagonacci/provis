{
  "id": "cap_item_{email_id}",
  "name": "item/{email_id}",
  "purpose": "Receive Email Request",
  "title": "item/{email_id}",
  "status": "healthy",
  "anchors": [
    {
      "path": "backend/app/routers/email.py",
      "kind": "api",
      "route": "/item/{email_id}"
    }
  ],
  "lanes": {
    "web": [],
    "api": [
      {
        "path": "backend/app/database.py"
      },
      {
        "path": "backend/app/main.py"
      },
      {
        "path": "backend/app/models/deck.py"
      },
      {
        "path": "backend/app/models/email.py"
      },
      {
        "path": "backend/app/models/prospect.py"
      },
      {
        "path": "backend/app/routers/deck.py"
      },
      {
        "path": "backend/app/routers/email.py"
      },
      {
        "path": "backend/app/routers/prospect.py"
      },
      {
        "path": "backend/app/schemas/email.py"
      },
      {
        "path": "backend/app/services/emailgeneration.py"
      }
    ],
    "workers": [],
    "other": []
  },
  "flow": [
    {
      "from": "backend/app/config.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/config.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/config.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/database.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "models.prospect",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "models.prospect",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "models.email",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "schemas.email",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "services.emailgeneration",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/prospect.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/prospect.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/pdf.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/pdf.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/slides.py",
      "to": "typing",
      "kind": "call"
    }
  ],
  "data": {
    "inputs": [
      {
        "path": "backend/app/routers/email.py",
        "why": "Handles incoming email requests."
      },
      {
        "path": "backend/app/routers/prospect.py",
        "why": "Handles incoming prospect requests."
      },
      {
        "path": "backend/app/routers/deck.py",
        "why": "Handles incoming deck requests."
      }
    ],
    "stores": [
      {
        "path": "backend/app/database.py",
        "why": "Defines the database connection and ORM setup."
      },
      {
        "path": "backend/app/models/email.py",
        "why": "Defines the Email model for database storage."
      },
      {
        "path": "backend/app/models/prospect.py",
        "why": "Defines the Prospect model for database storage."
      },
      {
        "path": "backend/app/models/deck.py",
        "why": "Defines the Deck model for database storage."
      }
    ],
    "externals": [
      {
        "path": "fastapi",
        "why": "Framework used for building the web application."
      },
      {
        "path": "sqlalchemy.orm",
        "why": "Used for ORM functionality with the database."
      },
      {
        "path": "pydantic",
        "why": "Used for data validation and settings management."
      }
    ]
  },
  "entrypoints": [
    {
      "path": "backend/app/routers/email.py",
      "framework": "fastapi",
      "kind": "api",
      "route": "/item/{email_id}"
    }
  ],
  "swimlanes": {
    "web": [],
    "api": [
      "backend/app/database.py",
      "backend/app/main.py",
      "backend/app/models/deck.py",
      "backend/app/models/email.py",
      "backend/app/models/prospect.py",
      "backend/app/routers/deck.py",
      "backend/app/routers/email.py",
      "backend/app/routers/prospect.py",
      "backend/app/schemas/email.py",
      "backend/app/services/emailgeneration.py"
    ],
    "workers": [],
    "other": []
  },
  "control_flow": [
    {
      "from": "backend/app/main.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "backend/app/models/prospect.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/models/prospect.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/models/email.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/schemas/email.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/services/emailgeneration.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "backend/app/database.py",
      "kind": "call"
    }
  ],
  "data_flow": {
    "inputs": [
      {
        "type": "env",
        "key": "ALLOWED_ORIGINS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "ALLOWED_ORIGINS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "APP_BASE_URL",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "APP_BASE_URL",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "BULLET_MAX_CHARS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "BULLET_MAX_CHARS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "DB_URL",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "DB_URL",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "FILE_STORAGE_DIR",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "FILE_STORAGE_DIR",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "MAX_BULLETS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "MAX_BULLETS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "OPENAI_API_KEY",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "OPENAI_API_KEY",
          "value": "***REDACTED***"
        }
      },
      {
        "type": "env",
        "key": "STUB_MODE",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "STUB_MODE",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "TITLE_MAX_CHARS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "TITLE_MAX_CHARS",
          "value": "example_value"
        }
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "",
        "handler": "create_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "",
        "handler": "list_prospects",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "get_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{prospect_id}",
        "handler": "update_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "SlideAIEditRequest",
        "fields": [
          {
            "name": "prompt",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "prompt": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{deck_id}",
        "handler": "get_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{deck_id}",
        "handler": "update_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{deck_id}/render",
        "handler": "render_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{deck_id}/slides/{index}",
        "handler": "get_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{deck_id}/slides/{index}",
        "handler": "patch_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{deck_id}/slides/{index}/ai-edit",
        "handler": "ai_edit_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/debug/ai-edit-test",
        "handler": "debug_ai_edit_test",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "EmailAIEditRequest",
        "fields": [
          {
            "name": "prompt",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "prompt": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_email_sequence",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "list_emails_for_prospect",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/item/{email_id}",
        "handler": "get_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/item/{email_id}",
        "handler": "update_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "DELETE",
        "path": "/item/{email_id}",
        "handler": "delete_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/item/{email_id}/ai-edit",
        "handler": "ai_edit_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "ProspectCreate",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "email",
            "type": "EmailStr",
            "required": false,
            "default": null
          },
          {
            "name": "phone_number",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "notes",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "company_name": "John Doe"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "ProspectUpdate",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "email",
            "type": "EmailStr",
            "required": false,
            "default": null
          },
          {
            "name": "phone_number",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "notes",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Slide",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "bullets",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "title": "sample_value",
          "bullets": "Field(default_factory=list)"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "DeckOut",
        "fields": [
          {
            "name": "id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "prospect_id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "slides",
            "type": "Any",
            "required": true,
            "default": null
          },
          {
            "name": "pdf_url",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "id": 42,
          "prospect_id": 42,
          "title": "sample_value",
          "slides": "example"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "SlideIn",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "bullets",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "title": "sample_value",
          "bullets": "Field(default_factory=list)"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "DeckUpdate",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "slides",
            "type": "Any",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "slides": "example"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "EmailOut",
        "fields": [
          {
            "name": "id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "prospect_id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "sequence_index",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "subject",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "id": 42,
          "prospect_id": 42,
          "sequence_index": 42,
          "subject": "sample_value",
          "body": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailIn",
        "fields": [
          {
            "name": "subject",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "subject": "sample_value",
          "body": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailUpdate",
        "fields": [
          {
            "name": "subject",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailBatchOut",
        "fields": [
          {
            "name": "items",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "items": "Field(default_factory=list)"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "ProspectContext",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      }
    ],
    "stores": [
      {
        "type": "dbModel",
        "name": "SlidePatch",
        "table": "slidepatchs",
        "fields": [],
        "path": "backend/app/routers/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "SlideAIEditRequest",
        "table": "slideaieditrequests",
        "fields": [],
        "path": "backend/app/routers/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailAIEditRequest",
        "table": "emailaieditrequests",
        "fields": [],
        "path": "backend/app/routers/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Prospect",
        "table": "prospects",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "company_name",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "contact_name",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "email",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "phone_number",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "industry",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "revenue_range",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "location",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "sale_motivation",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "signals",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "notes",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/deck.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/models/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Deck",
        "table": "decks",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "prospect_id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "title",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "slides_json",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "pdf_path",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/models/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Email",
        "table": "emails",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "prospect_id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "sequence_index",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "subject",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "body",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "updated_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/models/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "ProspectCreate",
        "table": "prospectcreates",
        "fields": [],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "ProspectUpdate",
        "table": "prospectupdates",
        "fields": [],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "Slide",
        "table": "slides",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "DeckOut",
        "table": "deckouts",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "SlideIn",
        "table": "slideins",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "DeckUpdate",
        "table": "deckupdates",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "EmailOut",
        "table": "emailouts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailIn",
        "table": "emailins",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailUpdate",
        "table": "emailupdates",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailBatchOut",
        "table": "emailbatchouts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "ProspectContext",
        "table": "prospectcontexts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      }
    ],
    "externals": [
      {
        "type": "api",
        "name": "OpenAI",
        "client": "backend/app/services/emailgeneration.py",
        "base_url": null,
        "path": "backend/app/services/emailgeneration.py",
        "usedFor": "External service/client calls.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "calls"
          }
        ]
      },
      {
        "type": "api",
        "name": "OpenAI",
        "client": "backend/app/services/ai.py",
        "base_url": null,
        "path": "backend/app/services/ai.py",
        "usedFor": "External service/client calls.",
        "example": {},
        "touches": []
      }
    ],
    "outputs": [
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "POST",
        "path": "",
        "handler": "create_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "get_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "PATCH",
        "path": "/{prospect_id}",
        "handler": "update_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "GET",
        "path": "/{deck_id}",
        "handler": "get_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "PATCH",
        "path": "/{deck_id}",
        "handler": "update_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "POST",
        "path": "/{deck_id}/render",
        "handler": "render_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_email_sequence",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "list_emails_for_prospect",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "GET",
        "path": "/item/{email_id}",
        "handler": "get_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "PATCH",
        "path": "/item/{email_id}",
        "handler": "update_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "POST",
        "path": "/item/{email_id}/ai-edit",
        "handler": "ai_edit_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "artifact",
        "name": "Deck PDF",
        "producedBy": "backend/app/services/pdf.py",
        "pathTemplate": "backend/output/decks/{deck_id}.pdf",
        "usedFor": "Rendered deck PDF file"
      },
      {
        "type": "artifact",
        "name": "Deck Slides",
        "producedBy": "backend/app/services/slides.py",
        "pathTemplate": "backend/output/decks/{deck_id}.pptx",
        "usedFor": "Rendered deck slide deck"
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Generated multi-step email sequence"
      }
    ]
  },
  "policies": [
    {
      "type": "middleware",
      "name": "CORSMiddleware",
      "path": "backend/app/main.py",
      "appliedAt": "backend/app/main.py:18"
    },
    {
      "type": "middleware",
      "name": "CORSMiddleware",
      "path": "backend/app/main.py",
      "appliedAt": "backend/app/main.py"
    },
    {
      "type": "dependency",
      "name": "Depends",
      "path": "backend/app/routers/prospect.py",
      "appliedAt": "backend/app/routers/prospect.py:11"
    },
    {
      "type": "dependency",
      "name": "Depends",
      "path": "backend/app/routers/prospect.py",
      "appliedAt": "backend/app/routers/prospect.py:30"
    },
    {
      "type": "dependency",
      "name": "Depends",
      "path": "backend/app/routers/prospect.py",
      "appliedAt": "backend/app/routers/prospect.py:34"
    }
  ],
  "contracts": [
    {
      "kind": "request",
      "name": "Session",
      "path": "",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{prospect_id}",
      "fields": []
    },
    {
      "kind": "request",
      "name": "SlideAIEditRequest",
      "path": "backend/app/routers/deck.py",
      "fields": [
        {
          "name": "prompt",
          "type": "str",
          "required": true,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{prospect_id}/generate",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{deck_id}",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{deck_id}/render",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{deck_id}/slides/{index}",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/{deck_id}/slides/{index}/ai-edit",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/debug/ai-edit-test",
      "fields": []
    },
    {
      "kind": "request",
      "name": "EmailAIEditRequest",
      "path": "backend/app/routers/email.py",
      "fields": [
        {
          "name": "prompt",
          "type": "str",
          "required": true,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/item/{email_id}",
      "fields": []
    },
    {
      "kind": "request",
      "name": "Session",
      "path": "/item/{email_id}/ai-edit",
      "fields": []
    },
    {
      "kind": "request",
      "name": "ProspectCreate",
      "path": "backend/app/schemas/prospect.py",
      "fields": [
        {
          "name": "company_name",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "contact_name",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "email",
          "type": "EmailStr",
          "required": false,
          "default": null
        },
        {
          "name": "phone_number",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "industry",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "revenue_range",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "location",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "sale_motivation",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "signals",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "notes",
          "type": "str",
          "required": false,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "ProspectUpdate",
      "path": "backend/app/schemas/prospect.py",
      "fields": [
        {
          "name": "company_name",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "contact_name",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "email",
          "type": "EmailStr",
          "required": false,
          "default": null
        },
        {
          "name": "phone_number",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "industry",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "revenue_range",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "location",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "sale_motivation",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "signals",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "notes",
          "type": "str",
          "required": false,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "Slide",
      "path": "backend/app/schemas/deck.py",
      "fields": [
        {
          "name": "title",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "bullets",
          "type": "Any",
          "required": true,
          "default": "Field(default_factory=list)"
        }
      ]
    },
    {
      "kind": "request",
      "name": "DeckOut",
      "path": "backend/app/schemas/deck.py",
      "fields": [
        {
          "name": "id",
          "type": "int",
          "required": true,
          "default": null
        },
        {
          "name": "prospect_id",
          "type": "int",
          "required": true,
          "default": null
        },
        {
          "name": "title",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "slides",
          "type": "Any",
          "required": true,
          "default": null
        },
        {
          "name": "pdf_url",
          "type": "str",
          "required": false,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "SlideIn",
      "path": "backend/app/schemas/deck.py",
      "fields": [
        {
          "name": "title",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "bullets",
          "type": "Any",
          "required": true,
          "default": "Field(default_factory=list)"
        }
      ]
    },
    {
      "kind": "request",
      "name": "DeckUpdate",
      "path": "backend/app/schemas/deck.py",
      "fields": [
        {
          "name": "title",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "slides",
          "type": "Any",
          "required": true,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "EmailOut",
      "path": "backend/app/schemas/email.py",
      "fields": [
        {
          "name": "id",
          "type": "int",
          "required": true,
          "default": null
        },
        {
          "name": "prospect_id",
          "type": "int",
          "required": true,
          "default": null
        },
        {
          "name": "sequence_index",
          "type": "int",
          "required": true,
          "default": null
        },
        {
          "name": "subject",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "body",
          "type": "str",
          "required": true,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "EmailIn",
      "path": "backend/app/schemas/email.py",
      "fields": [
        {
          "name": "subject",
          "type": "str",
          "required": true,
          "default": null
        },
        {
          "name": "body",
          "type": "str",
          "required": true,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "EmailUpdate",
      "path": "backend/app/schemas/email.py",
      "fields": [
        {
          "name": "subject",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "body",
          "type": "str",
          "required": false,
          "default": null
        }
      ]
    },
    {
      "kind": "request",
      "name": "EmailBatchOut",
      "path": "backend/app/schemas/email.py",
      "fields": [
        {
          "name": "items",
          "type": "Any",
          "required": true,
          "default": "Field(default_factory=list)"
        }
      ]
    },
    {
      "kind": "request",
      "name": "ProspectContext",
      "path": "backend/app/schemas/email.py",
      "fields": [
        {
          "name": "company_name",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "contact_name",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "industry",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "revenue_range",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "location",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "sale_motivation",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "signals",
          "type": "str",
          "required": false,
          "default": null
        }
      ]
    },
    {
      "kind": "response",
      "name": "ProspectOut",
      "path": "backend/app/routers/prospect.py",
      "fields": []
    },
    {
      "kind": "response",
      "name": "DeckOut",
      "path": "backend/app/routers/deck.py",
      "fields": []
    },
    {
      "kind": "response",
      "name": "EmailBatchOut",
      "path": "backend/app/routers/email.py",
      "fields": []
    },
    {
      "kind": "response",
      "name": "EmailOut",
      "path": "backend/app/routers/email.py",
      "fields": []
    },
    {
      "kind": "pydantic.Model",
      "name": "Settings",
      "fields": [
        {
          "name": "DB_URL",
          "type": "str",
          "required": true,
          "default": "sqlite:///./bdr.db"
        },
        {
          "name": "APP_BASE_URL",
          "type": "str",
          "required": true,
          "default": "http://localhost:8000"
        },
        {
          "name": "FILE_STORAGE_DIR",
          "type": "str",
          "required": true,
          "default": "./app/generated"
        },
        {
          "name": "OPENAI_API_KEY",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "STUB_MODE",
          "type": "bool",
          "required": true,
          "default": true
        },
        {
          "name": "ALLOWED_ORIGINS",
          "type": "str",
          "required": true,
          "default": "*"
        },
        {
          "name": "TITLE_MAX_CHARS",
          "type": "int",
          "required": true,
          "default": 200
        },
        {
          "name": "BULLET_MAX_CHARS",
          "type": "int",
          "required": true,
          "default": 500
        },
        {
          "name": "MAX_BULLETS",
          "type": "int",
          "required": true,
          "default": 8
        }
      ],
      "path": "backend/app/config.py"
    },
    {
      "kind": "pydantic.Model",
      "name": "SlidePatch",
      "fields": [
        {
          "name": "title",
          "type": "str",
          "required": false,
          "default": null
        },
        {
          "name": "bullets",
          "type": "Any",
          "required": false,
          "default": null
        }
      ],
      "path": "backend/app/routers/deck.py"
    },
    {
      "kind": "sqlalchemy",
      "name": "Prospect",
      "table": "prospects",
      "columns": [],
      "path": "backend/app/models/prospect.py"
    },
    {
      "kind": "sqlalchemy",
      "name": "Deck",
      "table": "decks",
      "columns": [],
      "path": "backend/app/models/deck.py"
    },
    {
      "kind": "sqlalchemy",
      "name": "Email",
      "table": "emails",
      "columns": [],
      "path": "backend/app/models/email.py"
    }
  ],
  "summaries": {
    "README.md": {
      "summary": "Module at README.md"
    },
    ".gitignore": {
      "summary": "Module at .gitignore"
    },
    "backend/requirements.txt": {
      "summary": "Supporting module for the application."
    },
    "backend/migrate_add_phone.py": {
      "summary": "Simple migration script to add phone_number column to prospects table"
    },
    "backend/app/config.py": {
      "summary": "Centralized application configuration.\n\n    Loads from environment with sensible local defaults so the app\n    can run end-to-end in stub mode without extra setup."
    },
    "backend/app/database.py": {
      "summary": "Supporting module for the application."
    },
    "backend/app/__init__.py": {
      "summary": "Supporting module for the application."
    },
    "backend/app/main.py": {
      "summary": "Supporting module for the application."
    },
    "backend/app/routers/prospect.py": {
      "summary": "FastAPI router with API endpoints for the application."
    },
    "backend/app/routers/deck.py": {
      "summary": "Debug endpoint to test AI editing functionality"
    },
    "backend/app/routers/__init__.py": {
      "summary": "FastAPI router with API endpoints for the application."
    },
    "backend/app/routers/email.py": {
      "summary": "FastAPI router with API endpoints for the application."
    },
    "backend/app/models/prospect.py": {
      "summary": "SQLAlchemy database models defining data structures."
    },
    "backend/app/models/deck.py": {
      "summary": "SQLAlchemy database models defining data structures."
    },
    "backend/app/models/__init__.py": {
      "summary": "SQLAlchemy database models defining data structures."
    },
    "backend/app/models/email.py": {
      "summary": "SQLAlchemy database models defining data structures."
    },
    "backend/app/schemas/prospect.py": {
      "summary": "Pydantic schemas for request/response validation."
    },
    "backend/app/schemas/deck.py": {
      "summary": "Pydantic schemas for request/response validation."
    },
    "backend/app/schemas/__init__.py": {
      "summary": "Pydantic schemas for request/response validation."
    },
    "backend/app/schemas/email.py": {
      "summary": "Pydantic schemas for request/response validation."
    },
    "backend/app/templates/deck.html": {
      "summary": "Module at backend/app/templates/deck.html"
    },
    "backend/app/services/emailgeneration.py": {
      "summary": "Business logic and external service integrations."
    },
    "backend/app/services/ai.py": {
      "summary": "Accept bullets as list[str], str with delimiters, or anything else (-> []).\n    Splits on newlines/semicolon/dot/bullet chars, trims, de-dups empties."
    },
    "backend/app/services/__init__.py": {
      "summary": "Business logic and external service integrations."
    },
    "backend/app/services/pdf.py": {
      "summary": "Renders the provided slides into a PDF and writes it to FILE_STORAGE_DIR (or out_dir).\n    Returns a relative URL path suitable for building a URL, e.g. '/generated/acme_offdeal.pdf'."
    },
    "backend/app/services/utils.py": {
      "summary": "Business logic and external service integrations."
    },
    "backend/app/services/slides.py": {
      "summary": "Ensure each slide has title + list[str] bullets, enforce limits."
    },
    "backend/static/init": {
      "summary": "Supporting module for the application."
    },
    "offdeal-frontend/postcss.config.mjs": {
      "summary": "Module at offdeal-frontend/postcss.config.mjs"
    },
    "offdeal-frontend/next-env.d.ts": {
      "summary": "Module at offdeal-frontend/next-env.d.ts"
    },
    "offdeal-frontend/README.md": {
      "summary": "Module at offdeal-frontend/README.md"
    },
    "offdeal-frontend/.gitignore": {
      "summary": "Module at offdeal-frontend/.gitignore"
    },
    "offdeal-frontend/package-lock.json": {
      "summary": "Supporting module for the application."
    },
    "offdeal-frontend/package.json": {
      "summary": "Supporting module for the application."
    },
    "offdeal-frontend/tsconfig.json": {
      "summary": "Supporting module for the application."
    },
    "offdeal-frontend/eslint.config.mjs": {
      "summary": "Module at offdeal-frontend/eslint.config.mjs"
    },
    "offdeal-frontend/next.config.ts": {
      "summary": "Module at offdeal-frontend/next.config.ts"
    },
    "offdeal-frontend/src/types.ts": {
      "summary": "Module at offdeal-frontend/src/types.ts"
    },
    "offdeal-frontend/src/app/layout.tsx": {
      "summary": "Module at offdeal-frontend/src/app/layout.tsx"
    },
    "offdeal-frontend/src/app/page.tsx": {
      "summary": "Module at offdeal-frontend/src/app/page.tsx"
    },
    "offdeal-frontend/src/app/globals.css": {
      "summary": "Module at offdeal-frontend/src/app/globals.css"
    },
    "offdeal-frontend/src/lib/api.ts": {
      "summary": "Module at offdeal-frontend/src/lib/api.ts"
    }
  },
  "keyFiles": [
    "__future__",
    "backend/app/routers/email.py",
    "database",
    "pydantic",
    "sqlalchemy.orm",
    "typing"
  ],
  "steps": [
    {
      "title": "Receive Email Request",
      "description": "The system receives an email request at the endpoint /item/{email_id}.",
      "fileId": "backend/app/routers/email.py"
    },
    {
      "title": "Validate Email ID",
      "description": "The system validates the provided email_id to ensure it exists in the database.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Fetch Email Data",
      "description": "The system retrieves the email data associated with the validated email_id from the database.",
      "fileId": "backend/app/models/prospect.py"
    },
    {
      "title": "Prepare Response",
      "description": "The system prepares a response containing the email data in the required format.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Send Response",
      "description": "The system sends the prepared response back to the client.",
      "fileId": "backend/app/services/emailgeneration.py"
    },
    {
      "title": "Log Request",
      "description": "The system logs the request and response for auditing purposes.",
      "fileId": "backend/app/routers/prospect.py"
    },
    {
      "title": "Receive Email Request",
      "description": "The system receives an email request at the endpoint /item/{email_id}.",
      "fileId": "backend/app/services/emailgeneration.py"
    },
    {
      "title": "Validate Email ID",
      "description": "The system validates the provided email_id to ensure it exists in the database.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Fetch Email Data",
      "description": "The system retrieves the email data associated with the validated email_id from the database.",
      "fileId": "backend/app/models/prospect.py"
    },
    {
      "title": "Prepare Response",
      "description": "The system prepares a response containing the email data in the required format.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Send Response",
      "description": "The system sends the prepared response back to the client.",
      "fileId": "backend/app/services/emailgeneration.py"
    },
    {
      "title": "Log Request",
      "description": "The system logs the request and response for auditing purposes.",
      "fileId": "backend/app/routers/prospect.py"
    },
    {
      "title": "Receive Email Request",
      "description": "The system receives an email request at the endpoint /item/{email_id}.",
      "fileId": "backend/app/services/emailgeneration.py"
    },
    {
      "title": "Validate Email ID",
      "description": "The system validates the provided email_id to ensure it exists in the database.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Fetch Email Data",
      "description": "The system retrieves the email data associated with the validated email_id from the database.",
      "fileId": "backend/app/models/prospect.py"
    },
    {
      "title": "Prepare Response",
      "description": "The system prepares a response containing the email data in the required format.",
      "fileId": "backend/app/routers/deck.py"
    },
    {
      "title": "Send Response",
      "description": "The system sends the prepared response back to the client.",
      "fileId": "backend/app/services/emailgeneration.py"
    },
    {
      "title": "Log Request",
      "description": "The system logs the request and response for auditing purposes.",
      "fileId": "backend/app/routers/prospect.py"
    }
  ],
  "dataIn": [
    "ALLOWED_ORIGINS",
    "APP_BASE_URL",
    "BULLET_MAX_CHARS",
    "DB_URL",
    "DeckOut",
    "DeckUpdate",
    "EmailAIEditRequest",
    "EmailBatchOut",
    "EmailIn",
    "EmailOut",
    "EmailUpdate",
    "FILE_STORAGE_DIR",
    "MAX_BULLETS",
    "OPENAI_API_KEY",
    "ProspectContext",
    "ProspectCreate",
    "ProspectUpdate",
    "STUB_MODE",
    "Session",
    "Slide",
    "SlideAIEditRequest",
    "SlideIn",
    "TITLE_MAX_CHARS"
  ],
  "dataOut": [
    "DeckOut",
    "EmailBatchOut",
    "EmailOut",
    "ProspectOut"
  ],
  "orchestrators": [
    "backend/app/routers/email.py",
    "backend/app/routers/deck.py",
    "backend/app/main.py"
  ],
  "sources": [
    "backend/app/routers/email.py"
  ],
  "sinks": [
    "backend/app/database.py",
    "backend/app/schemas/email.py",
    "backend/app/services/emailgeneration.py"
  ],
  "controlFlow": [
    {
      "from": "backend/app/main.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "backend/app/models/prospect.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/models/prospect.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/models/email.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/schemas/email.py",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "backend/app/services/emailgeneration.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "backend/app/database.py",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "backend/app/database.py",
      "kind": "call"
    }
  ],
  "dataFlow": {
    "inputs": [
      {
        "type": "env",
        "key": "ALLOWED_ORIGINS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "ALLOWED_ORIGINS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "APP_BASE_URL",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "APP_BASE_URL",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "BULLET_MAX_CHARS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "BULLET_MAX_CHARS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "DB_URL",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "DB_URL",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "FILE_STORAGE_DIR",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "FILE_STORAGE_DIR",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "MAX_BULLETS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "MAX_BULLETS",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "OPENAI_API_KEY",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "OPENAI_API_KEY",
          "value": "***REDACTED***"
        }
      },
      {
        "type": "env",
        "key": "STUB_MODE",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "STUB_MODE",
          "value": "example_value"
        }
      },
      {
        "type": "env",
        "key": "TITLE_MAX_CHARS",
        "path": "backend/app/config.py",
        "touches": [],
        "usedFor": "Configuration/secret loaded at runtime.",
        "example": {
          "key": "TITLE_MAX_CHARS",
          "value": "example_value"
        }
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "",
        "handler": "create_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "",
        "handler": "list_prospects",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "get_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{prospect_id}",
        "handler": "update_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "SlideAIEditRequest",
        "fields": [
          {
            "name": "prompt",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "prompt": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{deck_id}",
        "handler": "get_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{deck_id}",
        "handler": "update_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{deck_id}/render",
        "handler": "render_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{deck_id}/slides/{index}",
        "handler": "get_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/{deck_id}/slides/{index}",
        "handler": "patch_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{deck_id}/slides/{index}/ai-edit",
        "handler": "ai_edit_slide",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/debug/ai-edit-test",
        "handler": "debug_ai_edit_test",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "EmailAIEditRequest",
        "fields": [
          {
            "name": "prompt",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "prompt": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "validates"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_email_sequence",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "list_emails_for_prospect",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "GET",
        "path": "/item/{email_id}",
        "handler": "get_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "PATCH",
        "path": "/item/{email_id}",
        "handler": "update_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "DELETE",
        "path": "/item/{email_id}",
        "handler": "delete_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Session",
        "method": "POST",
        "path": "/item/{email_id}/ai-edit",
        "handler": "ai_edit_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "ProspectCreate",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "email",
            "type": "EmailStr",
            "required": false,
            "default": null
          },
          {
            "name": "phone_number",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "notes",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "company_name": "John Doe"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "ProspectUpdate",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "email",
            "type": "EmailStr",
            "required": false,
            "default": null
          },
          {
            "name": "phone_number",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "notes",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "Slide",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "bullets",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "title": "sample_value",
          "bullets": "Field(default_factory=list)"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "DeckOut",
        "fields": [
          {
            "name": "id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "prospect_id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "slides",
            "type": "Any",
            "required": true,
            "default": null
          },
          {
            "name": "pdf_url",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "id": 42,
          "prospect_id": 42,
          "title": "sample_value",
          "slides": "example"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "SlideIn",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "bullets",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "title": "sample_value",
          "bullets": "Field(default_factory=list)"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "DeckUpdate",
        "fields": [
          {
            "name": "title",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "slides",
            "type": "Any",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "slides": "example"
        },
        "touches": []
      },
      {
        "type": "requestSchema",
        "name": "EmailOut",
        "fields": [
          {
            "name": "id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "prospect_id",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "sequence_index",
            "type": "int",
            "required": true,
            "default": null
          },
          {
            "name": "subject",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "id": 42,
          "prospect_id": 42,
          "sequence_index": 42,
          "subject": "sample_value",
          "body": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailIn",
        "fields": [
          {
            "name": "subject",
            "type": "str",
            "required": true,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": true,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "subject": "sample_value",
          "body": "sample_value"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailUpdate",
        "fields": [
          {
            "name": "subject",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "body",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "EmailBatchOut",
        "fields": [
          {
            "name": "items",
            "type": "Any",
            "required": true,
            "default": "Field(default_factory=list)"
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {
          "items": "Field(default_factory=list)"
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      },
      {
        "type": "requestSchema",
        "name": "ProspectContext",
        "fields": [
          {
            "name": "company_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "contact_name",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "industry",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "revenue_range",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "location",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "sale_motivation",
            "type": "str",
            "required": false,
            "default": null
          },
          {
            "name": "signals",
            "type": "str",
            "required": false,
            "default": null
          }
        ],
        "path": "backend/app/schemas/email.py",
        "usedFor": "Validates incoming request bodies.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "validates"
          }
        ]
      }
    ],
    "stores": [
      {
        "type": "dbModel",
        "name": "SlidePatch",
        "table": "slidepatchs",
        "fields": [],
        "path": "backend/app/routers/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "SlideAIEditRequest",
        "table": "slideaieditrequests",
        "fields": [],
        "path": "backend/app/routers/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailAIEditRequest",
        "table": "emailaieditrequests",
        "fields": [],
        "path": "backend/app/routers/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Prospect",
        "table": "prospects",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "company_name",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "contact_name",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "email",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "phone_number",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "industry",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "revenue_range",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "location",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "sale_motivation",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "signals",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "notes",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/deck.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/models/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Deck",
        "table": "decks",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "prospect_id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "title",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "slides_json",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "pdf_path",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/models/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "Email",
        "table": "emails",
        "fields": [
          {
            "name": "__tablename__",
            "type": "str",
            "nullable": true
          },
          {
            "name": "id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "prospect_id",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "sequence_index",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "subject",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "body",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "created_at",
            "type": "Column",
            "nullable": true
          },
          {
            "name": "updated_at",
            "type": "Column",
            "nullable": true
          }
        ],
        "path": "backend/app/models/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          },
          {
            "edge": {
              "from": "backend/app/models/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "ProspectCreate",
        "table": "prospectcreates",
        "fields": [],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "ProspectUpdate",
        "table": "prospectupdates",
        "fields": [],
        "path": "backend/app/schemas/prospect.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "Slide",
        "table": "slides",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "DeckOut",
        "table": "deckouts",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "SlideIn",
        "table": "slideins",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "DeckUpdate",
        "table": "deckupdates",
        "fields": [],
        "path": "backend/app/schemas/deck.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": []
      },
      {
        "type": "dbModel",
        "name": "EmailOut",
        "table": "emailouts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailIn",
        "table": "emailins",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailUpdate",
        "table": "emailupdates",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "EmailBatchOut",
        "table": "emailbatchouts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      },
      {
        "type": "dbModel",
        "name": "ProspectContext",
        "table": "prospectcontexts",
        "fields": [],
        "path": "backend/app/schemas/email.py",
        "usedFor": "System of record persisted via SQLAlchemy.",
        "example": {
          "id": 1
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "reads/writes rows in"
          }
        ]
      }
    ],
    "externals": [
      {
        "type": "api",
        "name": "OpenAI",
        "client": "backend/app/services/emailgeneration.py",
        "base_url": null,
        "path": "backend/app/services/emailgeneration.py",
        "usedFor": "External service/client calls.",
        "example": {},
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/routers/email.py",
            "action": "calls"
          }
        ]
      },
      {
        "type": "api",
        "name": "OpenAI",
        "client": "backend/app/services/ai.py",
        "base_url": null,
        "path": "backend/app/services/ai.py",
        "usedFor": "External service/client calls.",
        "example": {},
        "touches": []
      }
    ],
    "outputs": [
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "POST",
        "path": "",
        "handler": "create_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "get_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "ProspectOut",
        "method": "PATCH",
        "path": "/{prospect_id}",
        "handler": "update_prospect",
        "file_path": "backend/app/routers/prospect.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/prospect.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "GET",
        "path": "/{deck_id}",
        "handler": "get_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "PATCH",
        "path": "/{deck_id}",
        "handler": "update_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "DeckOut",
        "method": "POST",
        "path": "/{deck_id}/render",
        "handler": "render_deck",
        "file_path": "backend/app/routers/deck.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/deck.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "handler": "generate_email_sequence",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "GET",
        "path": "/{prospect_id}",
        "handler": "list_emails_for_prospect",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "GET",
        "path": "/item/{email_id}",
        "handler": "get_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "PATCH",
        "path": "/item/{email_id}",
        "handler": "update_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "responseSchema",
        "name": "EmailOut",
        "method": "POST",
        "path": "/item/{email_id}/ai-edit",
        "handler": "ai_edit_email",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Defines response structure.",
        "example": {
          "example": true
        },
        "touches": [
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/database.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/database.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/prospect.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/prospect.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/models/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/models/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/schemas/email.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/schemas/email.py",
            "action": "provides"
          },
          {
            "edge": {
              "from": "backend/app/routers/email.py",
              "to": "backend/app/services/emailgeneration.py",
              "kind": "call"
            },
            "via": "call",
            "actor": "backend/app/services/emailgeneration.py",
            "action": "provides"
          }
        ]
      },
      {
        "type": "artifact",
        "name": "Deck PDF",
        "producedBy": "backend/app/services/pdf.py",
        "pathTemplate": "backend/output/decks/{deck_id}.pdf",
        "usedFor": "Rendered deck PDF file"
      },
      {
        "type": "artifact",
        "name": "Deck Slides",
        "producedBy": "backend/app/services/slides.py",
        "pathTemplate": "backend/output/decks/{deck_id}.pptx",
        "usedFor": "Rendered deck slide deck"
      },
      {
        "type": "responseSchema",
        "name": "EmailBatchOut",
        "method": "POST",
        "path": "/{prospect_id}/generate",
        "file_path": "backend/app/routers/email.py",
        "usedFor": "Generated multi-step email sequence"
      }
    ]
  },
  "nodeIndex": {
    "backend/app/database.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [
        "backend/app/main.py",
        "backend/app/routers/prospect.py",
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py",
        "backend/app/models/prospect.py",
        "backend/app/models/deck.py",
        "backend/app/models/email.py"
      ],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": [
        "Deck",
        "Email",
        "EmailAIEditRequest",
        "Prospect",
        "SlideAIEditRequest",
        "SlidePatch"
      ],
      "reqSchemas": [
        "SlideAIEditRequest",
        "EmailAIEditRequest"
      ]
    },
    "backend/app/main.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [],
      "outgoing": [
        "backend/app/database.py"
      ],
      "policies": [
        {
          "type": "middleware",
          "name": "CORSMiddleware",
          "path": "backend/app/main.py",
          "appliedAt": "backend/app/main.py:18"
        },
        {
          "type": "middleware",
          "name": "CORSMiddleware",
          "path": "backend/app/main.py",
          "appliedAt": "backend/app/main.py"
        }
      ],
      "envs": [],
      "relatedData": [],
      "reqSchemas": []
    },
    "backend/app/models/deck.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [],
      "outgoing": [
        "backend/app/database.py"
      ],
      "policies": [],
      "envs": [],
      "relatedData": [],
      "reqSchemas": []
    },
    "backend/app/models/email.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [
        "backend/app/routers/email.py"
      ],
      "outgoing": [
        "backend/app/database.py"
      ],
      "policies": [],
      "envs": [],
      "relatedData": [
        "EmailAIEditRequest"
      ],
      "reqSchemas": [
        "EmailAIEditRequest"
      ]
    },
    "backend/app/models/prospect.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [
        "backend/app/routers/deck.py",
        "backend/app/routers/email.py"
      ],
      "outgoing": [
        "backend/app/database.py"
      ],
      "policies": [],
      "envs": [],
      "relatedData": [
        "EmailAIEditRequest",
        "SlideAIEditRequest",
        "SlidePatch"
      ],
      "reqSchemas": [
        "SlideAIEditRequest",
        "EmailAIEditRequest"
      ]
    },
    "backend/app/routers/deck.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [],
      "outgoing": [
        "backend/app/database.py",
        "backend/app/models/prospect.py"
      ],
      "policies": [],
      "envs": [],
      "relatedData": [
        "Prospect"
      ],
      "reqSchemas": []
    },
    "backend/app/routers/email.py": {
      "role": "entrypoint",
      "lane": "api"
    },
    "backend/app/routers/prospect.py": {
      "lane": "api",
      "role": "handler",
      "incoming": [],
      "outgoing": [
        "backend/app/database.py"
      ],
      "policies": [
        {
          "type": "dependency",
          "name": "Depends",
          "path": "backend/app/routers/prospect.py",
          "appliedAt": "backend/app/routers/prospect.py:11"
        },
        {
          "type": "dependency",
          "name": "Depends",
          "path": "backend/app/routers/prospect.py",
          "appliedAt": "backend/app/routers/prospect.py:30"
        },
        {
          "type": "dependency",
          "name": "Depends",
          "path": "backend/app/routers/prospect.py",
          "appliedAt": "backend/app/routers/prospect.py:34"
        }
      ],
      "envs": [],
      "relatedData": [],
      "reqSchemas": []
    },
    "backend/app/schemas/email.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [
        "backend/app/routers/email.py"
      ],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": [
        "EmailAIEditRequest"
      ],
      "reqSchemas": [
        "EmailAIEditRequest"
      ]
    },
    "backend/app/services/emailgeneration.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [
        "backend/app/routers/email.py"
      ],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": [
        "EmailAIEditRequest"
      ],
      "reqSchemas": [
        "EmailAIEditRequest"
      ]
    }
  },
  "debug": {
    "data_flow_skipped": [],
    "extract_errors": [],
    "missing": {
      "summaries": "no docstrings or fallback summaries generated"
    }
  },
  "entryPoints": [],
  "recentChanges": []
}