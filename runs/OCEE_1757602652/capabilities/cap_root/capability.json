{
  "id": "cap_root",
  "name": "/",
  "purpose": "Initialize Application",
  "title": "/",
  "status": "healthy",
  "anchors": [
    {
      "path": "backend/app/routers/prospect.py",
      "kind": "api",
      "route": "/"
    },
    {
      "path": "backend/app/routers/deck.py",
      "kind": "api",
      "route": "/"
    },
    {
      "path": "backend/app/routers/email.py",
      "kind": "api",
      "route": "/"
    },
    {
      "path": "offdeal-frontend/src/app/page.tsx",
      "kind": "ui",
      "route": "/"
    }
  ],
  "lanes": {
    "web": [],
    "api": [
      {
        "path": "backend/app/__init__.py"
      },
      {
        "path": "backend/app/config.py"
      },
      {
        "path": "backend/app/database.py"
      },
      {
        "path": "backend/app/main.py"
      },
      {
        "path": "backend/app/models/__init__.py"
      },
      {
        "path": "backend/app/models/deck.py"
      },
      {
        "path": "backend/app/models/email.py"
      },
      {
        "path": "backend/app/models/prospect.py"
      },
      {
        "path": "backend/app/routers/__init__.py"
      },
      {
        "path": "backend/app/routers/deck.py"
      },
      {
        "path": "backend/app/routers/email.py"
      },
      {
        "path": "backend/app/routers/prospect.py"
      },
      {
        "path": "backend/app/schemas/__init__.py"
      },
      {
        "path": "backend/app/schemas/deck.py"
      },
      {
        "path": "backend/app/schemas/email.py"
      },
      {
        "path": "backend/app/schemas/prospect.py"
      },
      {
        "path": "backend/app/services/__init__.py"
      },
      {
        "path": "backend/app/services/ai.py"
      },
      {
        "path": "backend/app/services/emailgeneration.py"
      },
      {
        "path": "backend/app/services/pdf.py"
      },
      {
        "path": "backend/app/services/slides.py"
      },
      {
        "path": "backend/app/services/utils.py"
      },
      {
        "path": "backend/app/templates/deck.html"
      },
      {
        "path": "backend/migrate_add_phone.py"
      },
      {
        "path": "backend/requirements.txt"
      },
      {
        "path": "backend/static/init"
      }
    ],
    "workers": [],
    "other": []
  },
  "flow": [
    {
      "from": "backend/app/config.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/config.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/config.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/database.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/database.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/main.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/prospect.py",
      "to": "schemas.prospect",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "json",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "models.prospect",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "models.deck",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "schemas.deck",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "services.ai",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "services.pdf",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "services.slides",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/deck.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "fastapi",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "models.prospect",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "models.email",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "schemas.email",
      "kind": "call"
    },
    {
      "from": "backend/app/routers/email.py",
      "to": "services.emailgeneration",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/prospect.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/deck.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "sqlalchemy.orm",
      "kind": "call"
    },
    {
      "from": "backend/app/models/email.py",
      "to": "database",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/prospect.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/prospect.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/deck.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/schemas/email.py",
      "to": "pydantic",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "json",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/emailgeneration.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "json",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/ai.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/services/pdf.py",
      "to": "__future__",
      "kind": "call"
    },
    {
      "from": "backend/app/services/pdf.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/pdf.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "backend/app/services/slides.py",
      "to": "typing",
      "kind": "call"
    },
    {
      "from": "backend/app/services/slides.py",
      "to": "config",
      "kind": "call"
    },
    {
      "from": "offdeal-frontend/src/app/page.tsx",
      "to": "react",
      "kind": "call"
    },
    {
      "from": "offdeal-frontend/src/app/page.tsx",
      "to": "../lib/api",
      "kind": "call"
    },
    {
      "from": "offdeal-frontend/src/app/page.tsx",
      "to": "../types",
      "kind": "call"
    }
  ],
  "data": {
    "inputs": [
      {
        "path": "backend/app/routers/prospect.py",
        "why": "Handles incoming requests related to prospects."
      },
      {
        "path": "backend/app/routers/deck.py",
        "why": "Handles incoming requests related to decks."
      },
      {
        "path": "backend/app/routers/email.py",
        "why": "Handles incoming requests related to email functionalities."
      },
      {
        "path": "backend/app/services/emailgeneration.py",
        "why": "Generates emails based on input data."
      }
    ],
    "stores": [
      {
        "path": "backend/app/database.py",
        "why": "Manages database connections and operations."
      },
      {
        "path": "backend/app/models/prospect.py",
        "why": "Defines the data structure for prospects."
      },
      {
        "path": "backend/app/models/deck.py",
        "why": "Defines the data structure for decks."
      },
      {
        "path": "backend/app/models/email.py",
        "why": "Defines the data structure for emails."
      }
    ],
    "externals": [
      {
        "path": "fastapi",
        "why": "Framework used for building the web API."
      },
      {
        "path": "sqlalchemy.orm",
        "why": "Used for ORM functionality to interact with the database."
      },
      {
        "path": "pydantic",
        "why": "Used for data validation and settings management."
      },
      {
        "path": "json",
        "why": "Used for handling JSON data formats."
      },
      {
        "path": "react",
        "why": "Frontend library used for building user interfaces."
      }
    ]
  },
  "entrypoints": [
    "backend/app/routers/prospect.py",
    "backend/app/routers/deck.py",
    "backend/app/routers/email.py",
    "offdeal-frontend/src/app/page.tsx"
  ],
  "entryPoints": [
    "backend/app/routers/prospect.py",
    "backend/app/routers/deck.py",
    "backend/app/routers/email.py",
    "offdeal-frontend/src/app/page.tsx"
  ],
  "swimlanes": {
    "web": [],
    "api": [
      "backend/app/__init__.py",
      "backend/app/config.py",
      "backend/app/database.py",
      "backend/app/main.py",
      "backend/app/models/__init__.py",
      "backend/app/models/deck.py",
      "backend/app/models/email.py",
      "backend/app/models/prospect.py",
      "backend/app/routers/__init__.py",
      "backend/app/routers/deck.py",
      "backend/app/routers/email.py",
      "backend/app/routers/prospect.py",
      "backend/app/schemas/__init__.py",
      "backend/app/schemas/deck.py",
      "backend/app/schemas/email.py",
      "backend/app/schemas/prospect.py",
      "backend/app/services/__init__.py",
      "backend/app/services/ai.py",
      "backend/app/services/emailgeneration.py",
      "backend/app/services/pdf.py",
      "backend/app/services/slides.py",
      "backend/app/services/utils.py",
      "backend/app/templates/deck.html",
      "backend/migrate_add_phone.py",
      "backend/requirements.txt",
      "backend/static/init"
    ],
    "workers": [],
    "other": []
  },
  "control_flow": [],
  "data_flow": {
    "inputs": [],
    "stores": [],
    "externals": []
  },
  "policies": [
    {
      "path": "backend/app/config.py",
      "why": "Contains configuration settings that may enforce policies.",
      "type": "unknown"
    },
    {
      "path": "backend/app/services/ai.py",
      "why": "Implements policies related to AI functionalities.",
      "type": "unknown"
    },
    {
      "path": "backend/app/services/pdf.py",
      "why": "Implements policies related to PDF generation.",
      "type": "unknown"
    },
    {
      "path": "backend/app/services/slides.py",
      "why": "Implements policies related to slide generation.",
      "type": "unknown"
    }
  ],
  "contracts": [
    {
      "path": "backend/app/schemas/prospect.py",
      "why": "Defines the data validation schema for prospects."
    },
    {
      "path": "backend/app/schemas/deck.py",
      "why": "Defines the data validation schema for decks."
    },
    {
      "path": "backend/app/schemas/email.py",
      "why": "Defines the data validation schema for emails."
    }
  ],
  "summaries": {
    "file": {
      "backend/app/routers/prospect.py": "",
      "backend/app/routers/deck.py": "",
      "backend/app/routers/email.py": "",
      "offdeal-frontend/src/app/page.tsx": "",
      "fastapi": "",
      "sqlalchemy.orm": "",
      "typing": "",
      "database": "",
      "schemas.prospect": "",
      "json": "",
      "pydantic": "",
      "models.prospect": "",
      "models.deck": "",
      "schemas.deck": "",
      "services.ai": "",
      "services.pdf": "",
      "services.slides": "",
      "config": "",
      "__future__": "",
      "models.email": "",
      "schemas.email": "",
      "services.emailgeneration": "",
      "react": "",
      "../lib/api": "",
      "../types": "",
      "backend/app/main.py": "",
      "backend/app/database.py": "",
      "backend/app/models/prospect.py": "",
      "backend/app/models/deck.py": "",
      "backend/app/models/email.py": "",
      "backend/app/config.py": "",
      "backend/app/schemas/prospect.py": "",
      "backend/app/schemas/deck.py": "",
      "backend/app/schemas/email.py": "",
      "backend/app/services/emailgeneration.py": "",
      "backend/app/services/ai.py": "",
      "backend/app/services/pdf.py": "",
      "backend/app/services/slides.py": ""
    },
    "folder": {
      "backend/app": "",
      "offdeal-frontend/src": "",
      "../lib": ""
    },
    "narrative": [
      {
        "label": "Initialize Application",
        "detail": "Start the backend application using the main entry point.",
        "scenario": "The application starts without errors and is ready to accept requests."
      },
      {
        "label": "Send Prospect Request",
        "detail": "Send a request to the prospect endpoint with valid data.",
        "scenario": "The server processes the request and returns a success response."
      },
      {
        "label": "Generate Email",
        "detail": "Trigger the email generation service with the prospect data.",
        "scenario": "The email is generated successfully and sent to the specified address."
      },
      {
        "label": "Create Deck",
        "detail": "Send a request to create a new deck with valid data.",
        "scenario": "The server creates the deck and returns the deck details."
      },
      {
        "label": "Fetch Deck Details",
        "detail": "Request the details of the created deck.",
        "scenario": "The server returns the correct details of the deck."
      },
      {
        "label": "Render Frontend Page",
        "detail": "Load the frontend page that interacts with the backend services.",
        "scenario": "The page loads successfully and displays the relevant information."
      }
    ]
  },
  "keyFiles": [
    "__future__",
    "backend/app/routers/deck.py",
    "backend/app/routers/email.py",
    "config",
    "sqlalchemy.orm",
    "typing"
  ],
  "steps": [
    {
      "title": "Initialize Application",
      "description": "Start the backend application using the main entry point.",
      "fileId": "backend/app/routers/prospect.py"
    },
    {
      "title": "Send Prospect Request",
      "description": "Send a request to the prospect endpoint with valid data.",
      "fileId": null
    },
    {
      "title": "Generate Email",
      "description": "Trigger the email generation service with the prospect data.",
      "fileId": null
    },
    {
      "title": "Create Deck",
      "description": "Send a request to create a new deck with valid data.",
      "fileId": null
    },
    {
      "title": "Fetch Deck Details",
      "description": "Request the details of the created deck.",
      "fileId": null
    },
    {
      "title": "Render Frontend Page",
      "description": "Load the frontend page that interacts with the backend services.",
      "fileId": null
    }
  ],
  "dataIn": [],
  "dataOut": [],
  "orchestrators": [],
  "sources": [
    "backend/app/routers/prospect.py",
    "backend/app/routers/deck.py",
    "backend/app/routers/email.py",
    "offdeal-frontend/src/app/page.tsx"
  ],
  "sinks": [],
  "controlFlow": [],
  "dataFlow": {
    "inputs": [],
    "stores": [],
    "externals": []
  },
  "nodeIndex": {
    "backend/app/services/__init__.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/services/pdf.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/routers/__init__.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/routers/email.py": {
      "role": "entrypoint",
      "lane": "web"
    },
    "backend/app/routers/deck.py": {
      "role": "entrypoint",
      "lane": "web"
    },
    "backend/app/routers/prospect.py": {
      "role": "entrypoint",
      "lane": "web"
    },
    "backend/app/models/prospect.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/schemas/__init__.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/main.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/services/slides.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/services/emailgeneration.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/models/deck.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/models/__init__.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/schemas/deck.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/database.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/__init__.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/config.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/requirements.txt": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/schemas/email.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/templates/deck.html": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/migrate_add_phone.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/services/ai.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/static/init": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/models/email.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/services/utils.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "backend/app/schemas/prospect.py": {
      "lane": "api",
      "role": "sink",
      "incoming": [],
      "outgoing": [],
      "policies": [],
      "envs": [],
      "relatedData": []
    },
    "offdeal-frontend/src/app/page.tsx": {
      "role": "entrypoint",
      "lane": "web"
    }
  },
  "suspectRank": [],
  "recentChanges": []
}